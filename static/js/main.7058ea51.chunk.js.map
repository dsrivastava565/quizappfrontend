{"version":3,"sources":["utils/setAuthToken.js","utils/urls.js","actions/authActions.js","actions/types.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","validations/isEmpty.js","reducers/authReducer.js","reducers/erroReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","BASE_URL","setCurrentUser","data","type","payload","Navbar","e","preventDefault","this","props","logOutUser","isAuthenticated","auth","authLinks","className","href","onClick","onLogoutClick","bind","guestLinks","to","data-toggle","data-target","id","Component","protoTypes","PropTypes","func","isRequired","object","connect","state","dispatch","localStorage","clear","Date","getFullYear","Landing","history","push","Register","name","email","password","password2","errors","onChange","onSubmit","nextProps","setState","target","value","user","username","registerUser","noValidate","classnames","placeholder","userData","post","then","res","catch","err","response","withRouter","Login","console","log","loginUser","non_field_errors","url","setItem","get","currentuser","JSON","stringify","isEmpty","undefined","intitalState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","authtoken","parse","userdata","App","exact","path","component","Footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7058ea51.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken= token=>{\n    if(token){\n        axios.defaults.headers.common['Authorization']=`Token ${token}`;;\n    }else{\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;\n","// export const BASE_URL = 'http://127.0.0.1:8000/api/v1/users/';\nexport const BASE_URL = 'https://dsrivastava565.pythonanywhere.com/api/v1/users/';\n\n\n","import {GET_ERRORS,SET_CURRENT_USER} from './types';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport {BASE_URL} from '../utils/urls';\n//Register user\n\n\n\nexport const registerUser = (userData,history) => dispatch => { \n    const url = BASE_URL+\"register\"\n    axios.post(url,userData)\n    .then(res=>history.push(\"/login\"))\n    .catch(err=>\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    );\n\n\n};\n\nexport const loginUser = userData => dispatch => { \n    var url = BASE_URL+'login';\n    axios\n    .post(url,userData)\n    .then(res=>{\n        const { token } = res.data;\n        // Set Token to  ls\n        localStorage.setItem('authtoken',token);\n        // Set token to auth header\n        setAuthToken(token);\n        url = BASE_URL+\"userdata\";\n        axios.get(url).then(response=>{\n            const {currentuser} = response.data;\n            dispatch(setCurrentUser(currentuser));\n            // dispatch({\n            //     type:SET_CURRENT_USER,\n            //     payload:currentuser\n            // });\n            localStorage.setItem('userdata',JSON.stringify(currentuser));\n\n\n        }).catch(err=>console.log(err));\n\n    })\n    .catch(err=>\n        { \n            // console.log(err.response.data)\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    }\n    );\n\n    };\n    export const setCurrentUser = data=>{\n      return{\n          type:SET_CURRENT_USER,\n          payload:data\n      };  \n    };\n\n    export const logOutUser = ()=>dispatch=>{\n        localStorage.clear();\n        setAuthToken(false);\n        dispatch(setCurrentUser(null));\n    }\n\n\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import React, { Component } from 'react'\nimport {Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {logOutUser} from '../../actions/authActions'; \n\nclass Navbar extends Component {\n  onLogoutClick(e){\n    e.preventDefault();\n    this.props.logOutUser();\n  }\n\n    render() {\n      const {isAuthenticated} = this.props.auth;\n      const authLinks=( \n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n         <a \n         href=\"a\" \n         onClick={this.onLogoutClick.bind(this)} \n         className=\"nav-link\"> \n          Logout\n         </a>\n        \n        </li>\n      </ul>\n      );\n      const guestLinks=(\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">Login</Link>\n        </li>\n      </ul>\n      );\n\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n            <div className=\"container\">\n              <Link className=\"navbar-brand\" to=\"/\">DevConnector</Link>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n        \n              <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/profiles\"> Developers\n                    </Link>\n                  </li>\n                </ul>\n                {isAuthenticated?authLinks:guestLinks}\n               \n              </div>\n            </div>\n          </nav>\n        )\n    }\n}\n\nNavbar.protoTypes={\n  logOutUser:PropTypes.func.isRequired,\n  auth:PropTypes.object.isRequired\n};\nconst mapStateToProps = (state)=>({\n  auth:state.auth\n});\n\n\nexport default connect(mapStateToProps,{logOutUser})(Navbar);\n","import React from 'react'\n\nexport default  () =>{\n    return (\n        <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\n        Copyright &copy; {new Date().getFullYear()} Quiz App\n        </footer>\n    )\n}\n","import React, { Component } from 'react'\nimport {Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect}from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount(){\n    if(this.props.auth.isAuthenticated){\n      this.props.history.push('/dashboard');\n    }\n    \n    }\n    render() {\n        return (\n            <div className=\"landing\">\n            <div className=\"dark-overlay landing-inner text-light\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-12 text-center\">\n                    <h1 className=\"display-3 mb-4\">Let's Quiz\n                    </h1>\n                    <p className=\"lead\"> Let's Test Your Knowledge!</p>\n                    <hr />\n                    <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\n                    <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\nLanding.protoTypes={\n  auth:PropTypes.object.isRequired\n  \n};\nconst mapStateToProps = (state)=>({\n  auth:state.auth\n});\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport{withRouter} from 'react-router-dom';\nimport {connect}from 'react-redux';\nimport {registerUser} from '../../actions/authActions';\n\n class Register extends Component {\n    constructor(){\n        super();\n        this.state={\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            password2:\"\",\n            errors:{}\n        };\n        this.onChange= this.onChange.bind(this)\n        this.onSubmit= this.onSubmit.bind(this)\n\n    }\n    componentDidMount(){\n      if(this.props.auth.isAuthenticated){\n        this.props.history.push('/dashboard');\n      }\n      \n      }\ncomponentWillReceiveProps(nextProps){\n  if(nextProps.errors){\n    this.setState({errors:nextProps.errors})\n  }\n\n}\n\nonChange(e){\n   this.setState({[e.target.name]:e.target.value}) \n}\nonSubmit(e){\n    e.preventDefault();\n    const user = {\n        username:this.state.name,\n        email:this.state.email,\n        password:this.state.password\n    }\n    if(user.password!==this.state.password2){\n        this.setState({errors:{password:\"Both password does not match\"}})\n    }else{\n    this.props.registerUser(user,this.props.history);\n   \n    \n    }\n    }\n\n    render() {\n      const { errors } = this.state;\n      const{ user } = this.props.auth;\n    return (\n    <div className=\"register\">\n    {user ? user.email : null}\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 m-auto\">\n          <h1 className=\"display-4 text-center\">Sign Up</h1>\n          <p className=\"lead text-center\">Create your Quiz account</p>\n          <form noValidate onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <input \n              type=\"text\" \n              className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.username}) }\n              placeholder=\"Name\" \n              name=\"name\" \n              value={this.state.name}\n              onChange = {this.onChange}\n              />\n              {errors.username&&(<div className=\"invalid-feedback\">{errors.username}</div>)}\n            </div>\n            <div className=\"form-group\">\n              <input \n              type=\"email\"\n              onChange = {this.onChange} \n              value={this.state.email} \n              className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.email}) }\n              placeholder=\"Email Address\" \n              name=\"email\" />\n              {errors.email&&(<div className=\"invalid-feedback\">{errors.email}</div>)}\n              <small className=\"form-text text-muted\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"password\" onChange = {this.onChange}\n              value={this.state.password} className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.password}) }placeholder=\"Password\" name=\"password\" />\n              {errors.password&&(<div className=\"invalid-feedback\">{errors.password}</div>)}\n            </div>\n            <div className=\"form-group\">\n              <input type=\"password\" onChange = {this.onChange}\n              value={this.state.password2} className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.password}) }placeholder=\"Confirm Password\" name=\"password2\" />\n            </div>\n            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n        )\n    }\n}\nRegister.protoTypes={\n  registerUser:PropTypes.func.isRequired,\n  auth:PropTypes.object.isRequired,\n  errors:PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state)=>({\n  auth:state.auth,\n  errors:state.errors\n});\nexport default connect(mapStateToProps,{registerUser})(withRouter(Register));\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport {connect}from 'react-redux';\nimport classnames from 'classnames';\nimport {loginUser} from '../../actions/authActions';\nclass Login extends Component {\n  constructor(){\n    super();\n    this.state={\n        username:\"\",\n        password:\"\",\n        errors:{}\n    };\n    this.onChange= this.onChange.bind(this)\n    this.onSubmit= this.onSubmit.bind(this)\n\n}\ncomponentDidMount(){\nif(this.props.auth.isAuthenticated){\n  this.props.history.push('/dashboard');\n}\n\n}\ncomponentWillReceiveProps(nextProps){\n  if(nextProps.auth.isAuthenticated){\n    console.log(\"dsbdsbdjsjd\");\n    this.props.history.push('/dashboard');\n  }\nif(nextProps.errors){\nthis.setState({errors:nextProps.errors})\nconsole.log(this.state.errors+\"dfdfdf\");\n}\n\n}\n\nonChange(e){\nthis.setState({[e.target.name]:e.target.value}) \n}\nonSubmit(e){\ne.preventDefault();\nconst user = {\n    username:this.state.username,\n    password:this.state.password\n}\n\nthis.props.loginUser(user);\n// console.log(this.props.errors);\n}\n    render() {\n        const {errors} = this.state;\n\n        return (\n            <div className=\"login\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                  <h1 className=\"display-4 text-center\">Log In</h1>\n                  <p className=\"lead text-center\">Sign in to your DevConnector account</p>\n                  <form noValidate onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                      <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.non_field_errors}) } \n                      placeholder=\"Username\" \n                      name=\"username\" \n                      value={this.state.username}\n                      onChange = {this.onChange}\n                      />\n                      {errors.non_field_errors&&(<div className=\"invalid-feedback\">{errors.non_field_errors[0]}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                      <input \n                      type=\"password\" \n                      className={classnames(\"form-control form-control-lg\",{'is-invalid':errors.non_field_errors}) } \n                      placeholder=\"Password\" \n                      name=\"password\" \n                      value={this.state.password}\n                      onChange = {this.onChange}\n                      />\n                      {errors.password&&(<div className=\"invalid-feedback\">{errors.non_field_errors[0]}</div>)}\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\nLogin.protoTypes={\n  loginUser:PropTypes.func.isRequired,\n  auth:PropTypes.object.isRequired,\n  errors:PropTypes.object.isRequired\n};\nconst mapStateToProps = (state)=>({\n  auth:state.auth,\n  errors:state.errors\n});\n\nexport default connect(mapStateToProps,{ loginUser })(Login);\n","\nconst isEmpty = (value) =>\nvalue === undefined||\nvalue === null \n\n\n\nexport default  isEmpty;","import {SET_CURRENT_USER} from '../actions/types';\nimport isEmpty from '../validations/isEmpty';\nconst intitalState ={\n    isAuthenticated:false,\n    user:{}\n}\nexport default function(state = intitalState,action){\n    \nswitch(action.type){\n    case SET_CURRENT_USER:\n        return {\n            ...state,\n            isAuthenticated: !isEmpty(action.payload),\n            user:action.payload\n        };\n    default:\n    return state;\n}\n\n}","import {GET_ERRORS} from '../actions/types'\n\nconst intitalState ={\n}\nexport default function(state = intitalState,action){\nswitch(action.type){\n    case GET_ERRORS:\n    return action.payload\n    \n    default:\n    return state;\n}\n\n}","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './erroReducer';\n\nexport default combineReducers({\n    auth:authReducer,\n    errors:errorReducer\n});","import {createStore,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\nconst middleware =[thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ),\n    );\n\n\n\nexport default store;","import React,{ Component } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\nimport {BrowserRouter as Router,Route }  from 'react-router-dom';\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport {setCurrentUser} from './actions/authActions';\nif(localStorage.authtoken){\n\n  setAuthToken(localStorage.authtoken);\n  const currentuser = JSON.parse(localStorage.userdata);\n  \n  store.dispatch(setCurrentUser(currentuser));\n\n   \n\n}\n\nclass App extends Component {\n  render(){\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n    <Navbar/>\n    <Route exact path=\"/quizappfrontend/\" component = {Landing}/>\n     <div className=\"container\">\n     <Route exact path=\"/register\" component={Register}/>\n     <Route exact path=\"/login\" component={Login}/>\n     </div>\n     <Footer/>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}